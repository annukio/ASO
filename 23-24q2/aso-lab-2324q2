
Recomenació general: No facis clear a la terminal durant l'examen, si vols la pantalla mes neta fes
Cntrl+L o fes un less quan llegeixis fitxers

--------------------------------------------------------------------------
1- GESTIÓ DE RECURSOS AL NÚVOL (1,5 P)


1. Crea instancia al EC2 i connecta't mitjancant ssh 
INSTAL·LAR SERVIDOR WEB [a dins la maquina ec2]

#Per a instal·lar apache
sudo yum install -y httpd

#per a activar el servidor web
sudo systemctl start httpd
sudo systemctl enable httpd

#per a crear l'arxiu htlm amb el contigut indicat:
sudo nano /var/www/index.html

!! per a sftp:
- Descarregar:
 sftp> get /path/to/file

- Pujar:
 sftp> put filename /path/to/destination/


--------------------------------------------------------------------------
2- RECUPERACIÓ DEL SISTEMA (3,5 P)

1. Fes: gdisk /dev/nom i comanda 'p', la comanda 'i' tmb dona info
Completa la taula
Tmb: lsblk

!!Per a trobar els mountpoints:
        ** El directori /mnt serveix per fer mounts temporals dels dispositius q connectem al pc
        Muntarem en n carpetes cada una de les particions del disc
	1. Crea tantes carpetes com particions a la carpeta /mnt (sudo mkdir carpeta1 ... carpetan)
        2. monta a cada carpeta cada paritició del dic (sudo mount /dev/sdan /mnt/carpetan)
        3. Cotillear manualment que hi ha a cada /mnt/carpetaX
        4. Busca quina carpeta te el /etc
        5. i llavors alli pots accedir al /etc/fstab del disc i pots veure on està muntada cada partició

2. mkswap /dev/sdbn #n siguent el num de la partició de swap
+ afegir al /etc/fstab:
 /dev/sdbn none swap defaults 0 0

3. gdisk /dev/sdb
gdisk> n
gdisk> [seguir instruccions] -> Ferla de 4GB codi 8300
CUIDADO NO MACHAQUIS RES 

4. mkfs -t ext4 /dev/sdbn

5. mkdir /backups
   mount /dev/sda7 /backups  # si poses /backups al fstab aixo no cal fer-ho pq ja es farà automàtic quan boti el sistema
   #+ posar al fstab
   /dev/sdbn /backup ext4 defaults 0 2

6. # muntar sys proc i boot com a minim!!!! sino no funciona
   # bucle copiat de lab:
   # for i in /dev /dev/pts /proc /sys /run; do
   >    mount -B $i /linux/$i
   > done

   # Sino la vols liar
   mount -B /proc /linux/proc
   mount -B /sys /linux/sys
   mount -B /dev /linux/dev
   mount -B /boot/efi /linux/boot/efi

   DESPRES DE MUNTAR
   chroot /directori ???
	
   grub-install --target=x86 64-efi /dev/NOMDEVICE 
   # POSSIBLES ERRORS QUE PODEN SALTAR
   # - command not found -> no esta al path
   # - permission denied 
   # - poden ser varies coses, mirar bé l'output de l'error, 
   update-grub

7. Canviar constrasenyes
$> sudo passwd aso
$> sudo passwd root

[reboot sistema, incia al debian, t'ho posa al enunciat!!]

8.
$> sudo nano /etc/network/interfaces # per  a veure les interfaces
# Afegeix al final del fitxer:
auto eno1 # o com es digui la interficie que no es loopnack
iface eno1 inet dhcp #per a configurar amb dhcp

$> ifdown eno1
$> ifup eno1


--------------------------------------------------------------------------
3-  CREAR NOUS USUARIS I BACKUPS (2,5 P)

1. 
#instal·lar sudo
$> apt update
$> apt install sudo

# ha de fallar
# Mirar fstab????' nose aqui que representa que pot ser que no estigui en read only

# un cop funcioni:
$> usermod -a -G sudo aso # afegir aso al grup de sudoers

2. 
# crea grup primer
$> groupadd students
# crea usuaris
$> useradd -g students stu1
$> useradd -g students stu2
$> useradd -g students stu3

$> passwd stu1
$> passwd stu2
$> passwd stu3

3.
$> mkdir /shared
$> sudo chown students:students /shared 
# setGID:
$> sudo chmod g+s /shared
# doanr permisos escriptura
$> sudo chmod g+w /shared 

4. # per a fer un backup(si vols posa en un script)
# queda to feo pero ho demanen aixi
name=$(date '+%Y%m%d-%H%M') 
tar -zcvf /backup/"$name.tar.gz" --newer-mtime="24 hours ago" -C /etc .

Com ho prefereix en René:
tar -zcvf /backup/"$(date '+%Y%m%d-%H%M').tar.gz" --newer-mtime="24 hours ago" -C /etc .

--------------------------------------------------------------------------
4-  INSTAL·LACIO D'APLICACIONS (1,25 P)

$> su stu1

stu1$> sftp aso@asoserver.pc.ac.upc.edu [AsORoCkSHaRd!]
sftp> get examen-xxx/moon-buggy-1.0.tar.gz

tar -zxvf moon-buggy-1.0.tar.gz
sudo mv moon-buggy-1.0 /usr/local/mbuggy/

cd /usr/local/mbuggy/moon-buggy-1.0

# SUPER IMPORTANT DESCARREGAR BUILD-ESSENTIAL
sudo apt install build-essential autoconf automake libtool

./configure --prefix=/usr/local/mbuggy
[Et dira les llibreries que falten]

apt search lib[nom header]

#descarrega la que tingui -dev

./configure --prefix=/usr/local/mbuggy
make
make install

#prova l'executable: ./moon-buggy

#Ara cal crear link
echo $PATH
sudo ln moon-buggy /usr/local/bin/moon-buggy

#prova la comanda
moon-buggy

--------------------------------------------------------------------------
5- SCRIPTS (1,25 P)

1.

#!/bin/bash
ps -eo pid,user,cputime,comm --sort=-cputime | head -n 11

2.

#!/bin/bash

DEFAULT_NUM=10
NUM_PROCESSES=${1:-$DEFAULT_NUM}

ps -eo pid,user,cputime,comm --sort=-cputime | head -n $((NUM_PROCESSES + 1))
